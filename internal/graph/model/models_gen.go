// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gqlmodel

type Author struct {
	ID        *int    `json:"id,omitempty"`
	Firstname *string `json:"firstname,omitempty"`
	Lastname  *string `json:"lastname,omitempty"`
	Books     []*Book `json:"books,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

type AuthorsMutationNs struct {
	Create *AuthorsMutationNsMutationResult `json:"create"`
	Update *AuthorsMutationNsMutationResult `json:"update"`
	Delete *AuthorsMutationNsMutationResult `json:"delete"`
}

type AuthorsMutationNsInput struct {
	ID        *int    `json:"id,omitempty"`
	Firstname *string `json:"firstname,omitempty"`
	Lastname  *string `json:"lastname,omitempty"`
}

type AuthorsMutationNsMutationResult struct {
	Changed *Author `json:"changed,omitempty"`
}

type AuthorsQueryNs struct {
	Get   *Author                    `json:"get,omitempty"`
	Query *AuthorsQueryNsQueryResult `json:"query"`
}

type AuthorsQueryNsQueryFilterInput struct {
	Pagination *QueryPaginationInput `json:"pagination,omitempty"`
	Sort       *QuerySortingInput    `json:"sort,omitempty"`
}

type AuthorsQueryNsQueryResult struct {
	Authors []*Author `json:"authors"`
	Count   *int      `json:"count,omitempty"`
}

type Book struct {
	ID        *int      `json:"id,omitempty"`
	Title     *string   `json:"title,omitempty"`
	Authors   []*Author `json:"authors,omitempty"`
	Genre     *Genre    `json:"genre,omitempty"`
	CreatedAt *string   `json:"createdAt,omitempty"`
	UpdatedAt *string   `json:"updatedAt,omitempty"`
}

type BooksMutationNs struct {
	Create *BooksMutationNsMutationResult `json:"create"`
	Update *BooksMutationNsMutationResult `json:"update"`
	Delete *BooksMutationNsMutationResult `json:"delete"`
}

type BooksMutationNsInput struct {
	ID      *int    `json:"id,omitempty"`
	Title   *string `json:"title,omitempty"`
	Authors []*int  `json:"authors,omitempty"`
	Genre   *int    `json:"genre,omitempty"`
}

type BooksMutationNsMutationResult struct {
	Changed *Book `json:"changed,omitempty"`
}

type BooksQueryNs struct {
	Get   *Book                    `json:"get"`
	Query *BooksQueryNsQueryResult `json:"query"`
}

type BooksQueryNsQueryFilterInput struct {
	Pagination *QueryPaginationInput `json:"pagination,omitempty"`
	Sort       *QuerySortingInput    `json:"sort,omitempty"`
}

type BooksQueryNsQueryResult struct {
	Books []*Book `json:"books"`
	Count *int    `json:"count,omitempty"`
}

type Genre struct {
	ID        *int    `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

type GenresMutationNs struct {
	Create *GenresMutationNsMutationResult `json:"create"`
	Update *GenresMutationNsMutationResult `json:"update"`
	Delete *GenresMutationNsMutationResult `json:"delete"`
}

type GenresMutationNsInput struct {
	ID   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

type GenresMutationNsMutationResult struct {
	Changed *Genre `json:"changed,omitempty"`
}

type GenresQueryNs struct {
	Get   *Genre                    `json:"get,omitempty"`
	Query *GenresQueryNsQueryResult `json:"query"`
}

type GenresQueryNsQueryFilterInput struct {
	Pagination *QueryPaginationInput `json:"pagination,omitempty"`
	Sort       *QuerySortingInput    `json:"sort,omitempty"`
}

type GenresQueryNsQueryResult struct {
	Genres []*Genre `json:"genres"`
	Count  *int     `json:"count,omitempty"`
}

type Mutation struct {
}

type Query struct {
}

type QueryPaginationInput struct {
	Limit *int `json:"limit,omitempty"`
	Page  *int `json:"page,omitempty"`
}

type QuerySortingInput struct {
	Field *string `json:"field,omitempty"`
	Order *string `json:"order,omitempty"`
}
